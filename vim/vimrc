" {{{ dein

if v:version >= 800
    if &compatible
        set nocompatible               " Be iMproved
    endif

    " Required:
    set runtimepath+=~/.vim/dein/repos/github.com/Shougo/dein.vim

    " Required:
    if dein#load_state('~/.vim/dein')
        call dein#begin('~/.vim/dein')

        " Let dein manage dein
        " Required:
        call dein#add('~/.vim/dein/repos/github.com/Shougo/dein.vim')

        " Add or remove your plugins here:
        call dein#add('airblade/vim-gitgutter')
        call dein#add('chriskempson/base16-vim')
        call dein#add('ervandew/supertab')
        call dein#add('elzr/vim-json')
        call dein#add('godlygeek/tabular')
        call dein#add('junegunn/fzf')
        call dein#add('junegunn/fzf.vim')
        call dein#add('maksimr/vim-jsbeautify')
        call dein#add('mattn/vim-sqlfmt')
        if !has('nvim')
            call dein#add('roxma/nvim-yarp')
            call dein#add('roxma/vim-hug-neovim-rpc')
        endif
        if !has('nvim')
            call dein#add('osyo-manga/vim-over')
        endif
        call dein#add('scrooloose/nerdtree')
        call dein#add('Shougo/deoplete.nvim')
        call dein#add('Shougo/neco-syntax')
        call dein#add('tomtom/tcomment_vim')
        call dein#add('tpope/vim-fugitive')
        call dein#add('ujihisa/neco-look')
        call dein#add('vim-airline/vim-airline')
        call dein#add('vim-airline/vim-airline-themes')
        call dein#add('zchee/deoplete-jedi')

        " Required:
        call dein#end()
        call dein#save_state()
    endif

    " Required:
    filetype plugin indent on
    syntax enable

    " If you want to install not installed plugins on startup.
    if dein#check_install()
        call dein#install()
    endif
endif

" }}}
" {{{ Language

if has('iconv')
    set fileencodings=us-ascii,utf-8

    if &encoding ==? "euc-jp"
        set fileencodings+=cp932,euc-jp
    else
        set fileencodings+=euc-jp,cp932
    endif
endif

set encoding=utf-8
set fileencoding=utf-8

set fileformats=unix,dos,mac
set fileformat=unix

" }}}
" {{{ about Edit

" Backspace over anything
set backspace=indent,eol,start

" Width of tab
set tabstop=4
set shiftwidth=4
set softtabstop=4

" Expand tab to space
set expandtab

" Use smarttab
set smarttab

" Auto-indent
set autoindent

" Read automatically when a file has been changed outside of vim
set autoread

" Show matching of bracket
set showmatch

" Ignore formatoptions
autocmd FileType * setlocal formatoptions=tcqjmM

" Folding marker is {{{ }}}
set foldmethod=marker
set nofoldenable

" IM is off
set iminsert=0
set imsearch=0

" Ignore octal
set nrformats="alpha,bin,hex"

" Command history
set history=10000

" Use wildmenu
set wildmenu

" }}}
" {{{ about Find

" Ignore case
set ignorecase

" Case-sensitive including small-caps with large-caps
set smartcase

" Return 1st line when go to last line
set wrapscan

" Incrimental search
set incsearch

" highlight all its matches
set hlsearch

" }}}
" {{{ about Display

" Show tab and return
set list

" How show for tab and return
set listchars="tab:> ,trail:-,nbsp:+"

" Show line number
set number

" Show rular
set ruler

" Show title
set title

" Hide toolbar
set guioptions-=T

" Hide startup message
set shortmess+=I

" Show command at status line
set showcmd

" Always show status line
set laststatus=2

" Beep by visual
set visualbell

" True color for terminal
if v:version >= 800
    set termguicolors
    let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
    let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
endif

" Color setting for internal terminal
" This is the same as base16-onedark
let g:terminal_ansi_colors = [
    \ "#282c34", "#e88388", "#a7cc8c", "#dbaa79",
    \ "#72bef2", "#d291e4", "#d291e4", "#b9c0cb",
    \ "#6f7783", "#e88388", "#a7cc8c", "#dbaa79#",
    \ "#72bef2", "#d291e4", "#65c2cd", "#ffffff"
\ ]

" Color scheme
if v:version >= 800
    colorscheme base16-onedark
else
    colorscheme default
endif

" }}}
" {{{ About File Handling

" Do not backup
set nobackup

" Do not create swapfile
set noswapfile

" Do not create undofile
set noundofile

" }}}
" {{{ About Buffer

set hidden

" }}}
" {{{ Key Mapping

" Set <leader>
let mapleader = " "

" Handling a wrapped line
nnoremap j gj
nnoremap k gk

" Remap recording
nnoremap q <NOP>
nnoremap <leader>q q

" Remap command and search history
nnoremap q: <NOP>
nnoremap q/ <NOP>
nnoremap q? <NOP>
nnoremap qq: <ESC>q:
nnoremap qq/ <ESC>q/
nnoremap qq? <ESC>q?

" Shortcut of highlight is off
nnoremap <ESC><ESC> :nohlsearch<Return><ESC>

" Shortcut to open terminal
noremap <leader>` :terminal<Return>

" Use right-bracket for espace
noremap <C-]> <ESC>
inoremap <C-]> <ESC>

" Use semi-colon for commandline mode
nnoremap ; :

" Remap tab controls
nnoremap <leader>t :tabedit<Return>

if has('mac')
  nnoremap <D-S-[> :tabnext<Return>
  nnoremap <D-S-]> :tabprevious<Return>
elseif has('win32')
  nnoremap <C-Tab> :tabnext<Return>
  nnoremap <C-S-Tab> :tabprevious<Return>
endif

" Remap split
noremap <C-w>f <C-w>w
noremap <C-w><C-f> <C-w>w
noremap <C-w>b <C-w>W
noremap <C-w><C-b> <C-w>W

" Remap <C-w> in insert mode
inoremap <C-w> <ESC><C-w>

" }}}

if v:version >= 800
    " {{{ vim-airline

    let g:airline_theme="bubblegum"
    let g:airline_powerline_fonts = 1
    let g:airline#extensions#tabline#enabled = 1

    " }}}
    " {{{ deoplete

    let g:deoplete#enable_at_startup=1
    let g:deoplete#auto_completion_start_length=1
    let g:deoplete#enable_smart_case=1
    let g:deoplete#enable_refresh_always=1
    let g:deoplete#text_mode_filetypes={"_": 1}

    " }}}
    " {{{ FZF

    nnoremap <leader>e :FZF<Return>

    " }}}
    " {{{ NERDTree

    noremap <C-e> :NERDTreeToggle<Return>

    " Show bookmark by default
    let g:NERDTreeShowBookmarks=1

    " }}}
    " {{{ vim-over

    nnoremap <leader>s :OverCommandLine<Return>

    " }}}
endif
