" {{{ Language

if has('iconv')
  set fileencodings=us-ascii,utf-8

  if &encoding ==? 'euc-jp'
    set fileencodings+=cp932,euc-jp
  else
    set fileencodings+=euc-jp,cp932
  endif
endif

set encoding=utf-8
set fileencoding=utf-8

set fileformats=unix,dos,mac
set fileformat=unix

" }}}
" {{{ about Edit

" Backspace over anything
set backspace=indent,eol,start

" Width of tab
set tabstop=4
set shiftwidth=4
set softtabstop=4

" Expand tab to space
set expandtab

" Show matching of bracket
set showmatch

" Use matchit plugin
source $VIMRUNTIME/macros/matchit.vim

" Ignore formatoptions
autocmd FileType * setlocal formatoptions=mM

" Folding marker is {{{ }}}
set foldmethod=marker
set nofoldenable

" IM is off
set iminsert=0
set imsearch=0

" Ignore octal and hex
set nrformats=""

" }}}
" {{{ about Find

" Ignore case
set ignorecase

" Case-sensitive including small-caps with large-caps
set smartcase

" Return 1st line when go to last line
set wrapscan

" Incrimental search
set incsearch

" }}}
" {{{ about Display

" Show tab and return
set list

" How show for tab and return
set listchars=tab:>-,trail:_

" Show line number
set number

" Support Japanese for auto line wrapping
set formatoptions+=mM

" Show rular
set ruler

" Show title
set title

" Hide toolbar
set guioptions-=T

" Hide startup message
set shortmess+=I

" Set status line
set statusline=%<%f\ %m%r%h%w%{'['.(&fenc!=''?&fenc:&enc).']['.&ff.']'}%=%l,%c%V%8P

" Show command at status line
set showcmd

" Always show status line
set laststatus=2

" Beep by visual
set visualbell

" Use syntax highlight
syntax on

" Color scheme
colorscheme base16-tomorrow
highlight StatusLine term=reverse cterm=reverse gui=none guibg=#879196 guifg=#fafafa

" }}}
" {{{ About file handling

" Do not backup

set nobackup
set backupext=.bak

" Do not create undofile
set noundofile

" }}}
" {{{ About Buffer

set hidden

" }}}
" {{{ Key Mapping

" Set <leader>
let mapleader = " "

" Handling a wrapped line as same as 2 lines
nnoremap j gj
nnoremap k gk

" Remap recording
nnoremap q <NOP>
nnoremap <leader>q q

" Remap command and search history
nnoremap q: <NOP>
nnoremap q/ <NOP>
nnoremap q? <NOP>
nnoremap qq: <ESC>q:
nnoremap qq/ <ESC>q/
nnoremap qq? <ESC>q?

" Use right-bracket for espace
noremap <C-]> <ESC>
inoremap <C-]> <ESC>

" Use semi-colon for commandline mode
nnoremap ; :

" Shortcut of highlight is off
nnoremap <C-n> :nohlsearch<CR>

" }}}
