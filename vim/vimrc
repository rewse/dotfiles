" {{{ Language

if has('iconv')
    set fileencodings=us-ascii,utf-8

    if &encoding ==? "euc-jp"
        set fileencodings+=cp932,euc-jp
    else
        set fileencodings+=euc-jp,cp932
    endif
endif

set encoding=utf-8
set fileencoding=utf-8

set fileformats=unix,dos,mac
set fileformat=unix

" }}}
" {{{ about Edit

" Backspace over anything
set backspace=indent,eol,start

" Width of tab
set tabstop=4
set shiftwidth=4
set softtabstop=4

" Expand tab to space
set expandtab

" Use smarttab
set smarttab

" Auto-indent
set autoindent

" Read automatically when a file has been changed outside of vim
set autoread

" Show matching of bracket
set showmatch

" Ignore formatoptions
autocmd FileType * setlocal formatoptions=tcqjmM

" Folding marker is {{{ }}}
set foldmethod=marker
set nofoldenable

" IM is off
set iminsert=0
set imsearch=0

" Ignore octal
set nrformats="alpha,bin,hex"

" Command history
set history=10000

" Use wildmenu
set wildmenu

" }}}
" {{{ about Find

" Ignore case
set ignorecase

" Case-sensitive including small-caps with large-caps
set smartcase

" Return 1st line when go to last line
set wrapscan

" Incrimental search
set incsearch

" highlight all its matches
set hlsearch

" }}}
" {{{ about Display

" Show tab and return
set list

" How show for tab and return
set listchars=tab:>\ ,trail:-,nbsp:+

" Show line number
set number

" Show rular
set ruler

" Show title
set title

" Hide toolbar
set guioptions-=T

" Hide startup message
set shortmess+=I

" Show command at status line
set showcmd

" Always show status line
set laststatus=2

" Beep by visual
set visualbell

" Color
colorscheme default

" }}}
" {{{ About File Handling

" Do not backup
set nobackup

" Do not create swapfile
set noswapfile

" Do not create undofile
set noundofile

" }}}
" {{{ About Buffer

set hidden

" }}}
" {{{ Key Mapping

" Set <leader>
let mapleader = " "

" Handling a wrapped line
nnoremap j gj
nnoremap k gk

" Remap recording
nnoremap q <NOP>
nnoremap <leader>q q

" Remap command and search history
nnoremap q: <NOP>
nnoremap q/ <NOP>
nnoremap q? <NOP>
nnoremap qq: <ESC>q:
nnoremap qq/ <ESC>q/
nnoremap qq? <ESC>q?

" Shortcut of highlight is off
nnoremap <ESC><ESC> :nohlsearch<Return><ESC>

" Shortcut to open terminal
noremap <leader>` :terminal<Return>

" Use right-bracket for espace
noremap <C-]> <ESC>
inoremap <C-]> <ESC>

" Use semi-colon for commandline mode
nnoremap ; :

" Remap tab controls
nnoremap <leader>t :tabedit<Return>

if has('mac')
  nnoremap <D-S-[> :tabnext<Return>
  nnoremap <D-S-]> :tabprevious<Return>
elseif has('win32')
  nnoremap <C-Tab> :tabnext<Return>
  nnoremap <C-S-Tab> :tabprevious<Return>
endif

" Remap split
noremap <C-w>f <C-w>w
noremap <C-w><C-f> <C-w>w
noremap <C-w>b <C-w>W
noremap <C-w><C-b> <C-w>W

" Remap <C-w> in insert mode
inoremap <C-w> <ESC><C-w>

" Remap beginning/end of a line

nnoremap H ^
nnoremap L $

" }}}
